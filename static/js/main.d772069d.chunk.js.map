{"version":3,"sources":["utils/fetchClient.ts","types/Status.ts","types/LocationEnum.ts","api/todos.ts","components/Footer/Footer.tsx","types/ErrorTypes.ts","components/Header/Header.tsx","components/TodoItem.tsx","components/TodoList.tsx","components/Main/Main.tsx","components/ErrorMessages/ErrorMessages.tsx","utils/getVisibleTodos.ts","App.tsx","index.tsx"],"names":["BASE_URL","wait","delay","Promise","resolve","setTimeout","request","url","method","data","options","body","JSON","stringify","headers","then","fetch","response","ok","Error","status","statusText","get","includes","json","Status","LocationEnum","client","getTodos","userId","deleteTodo","updateTodo","ErrorTypes","Footer","itemsLeftCount","onDeleteCompletedTodo","isAnyTodoCompleted","location","useLocation","className","to","cn","selected","pathname","all","data-type","default","active","completed","type","onClick","style","visibility","Header","countActiveTodo","onHandleAddTodo","disabeled","disabled","onChangeStatusAllTodo","haveNotTodos","useState","input","setInput","aria-label","onSubmit","event","placeholder","value","onChange","target","TodoItem","todo","onRemoveTodo","onChangeStatusTodo","setIdTodoForChange","onEditTodo","id","title","editing","setEditing","titleEdit","setTitleEdit","inputRef","useRef","useEffect","current","focus","htmlFor","checked","preventDefault","prev","ref","onBlur","onKeyDown","key","onDoubleClick","TodoList","visibleTodos","idTodoForChange","map","Date","Main","ErrorMessages","errorMessage","onDeleteError","USER_ID","App","todos","setTodos","disableInput","setDisableInput","setErrorMessage","locationPath","todosArr","filter","getVisibleTodos","length","some","a","result","ErrorGet","handleAddTodo","trim","todoTempo","splice","createdTodo","ErrorPost","handleUpdateTodo","ErrorPatch","handleRemoveTodo","ErrorDelete","handleChangeStatusTodo","todoId","newTodo","handleChangeStatusAllTodo","every","todosStatus","handleDeleteCompletedTodo","comletedTodos","loadedTodos","todoEdited","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d772069d.chunk.js","sourcesContent":["/* eslint-disable @typescript-eslint/no-explicit-any */\nconst BASE_URL = 'https://mate.academy/students-api';\n\n// returns a promise resolved after a given delay\nfunction wait(delay: number) {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\n// To have autocompletion and avoid mistypes\ntype RequestMethod = 'GET' | 'POST' | 'PATCH' | 'DELETE';\n\nfunction request<T>(\n  url: string,\n  method: RequestMethod = 'GET',\n  data: any = null, // we can send any data to the server\n): Promise<T> {\n  const options: RequestInit = { method };\n\n  if (data) {\n    // We add body and Content-Type only for the requests with data\n    options.body = JSON.stringify(data);\n    options.headers = {\n      'Content-Type': 'application/json; charset=UTF-8',\n    };\n  }\n\n  // we wait for testing purpose to see loaders\n  return wait(300)\n    .then(() => fetch(BASE_URL + url, options))\n    .then(response => {\n      if (!response.ok) {\n        throw new Error(`${response.status} - ${response.statusText}`);\n      }\n\n      if (!response.headers.get('content-type')?.includes('application/json')) {\n        return new Error('Content-type is not supported');\n      }\n\n      return response.json();\n    });\n}\n\nexport const client = {\n  get: <T>(url: string) => request<T>(url),\n  post: <T>(url: string, data: any) => request<T>(url, 'POST', data),\n  patch: <T>(url: string, data: any) => request<T>(url, 'PATCH', data),\n  delete: (url: string) => request(url, 'DELETE'),\n};\n","// eslint-disable-next-line no-shadow\nexport enum Status {\n  default = 'all',\n  active = 'active',\n  completed = 'comleted',\n}\n","// eslint-disable-next-line no-shadow\nexport enum LocationEnum {\n  all = '/',\n  active = '/active',\n  completed = '/completed',\n}\n","import { Todo } from '../types/Todo';\nimport { client } from '../utils/fetchClient';\n\nexport const getTodos = (userId: number) => {\n  return client.get<Todo[]>(`/todos?userId=${userId}`);\n};\n\nexport const createTodo = (userId: number, data: unknown) => {\n  return client.post<Todo>(`/todos?userId=${userId}`, data);\n};\n\nexport const deleteTodo = (userId: number) => {\n  return client.delete(`/todos/${userId}`);\n};\n\nexport const updateTodo = (userId: number, data: unknown) => {\n  return client.patch<Todo>(`/todos/${userId}`, data);\n};\n","import React from 'react';\nimport cn from 'classnames';\nimport { Link, useLocation } from 'react-router-dom';\nimport { Status } from '../../types/Status';\nimport { LocationEnum } from '../../types/LocationEnum';\n\ntype Props = {\n  itemsLeftCount: number,\n  onDeleteCompletedTodo: () => Promise<void>,\n  isAnyTodoCompleted: boolean,\n};\n\nexport const Footer: React.FC<Props> = ({\n  itemsLeftCount,\n  onDeleteCompletedTodo,\n  isAnyTodoCompleted,\n}) => {\n  const location = useLocation();\n\n  return (\n    <footer className=\"todoapp__footer\">\n      <span className=\"todo-count\">\n        {`${itemsLeftCount} `}\n        items left\n      </span>\n\n      <nav className=\"filter\">\n        <Link\n          to=\"/\"\n          className={\n            cn(\n              'filter__link',\n              { selected: location.pathname === LocationEnum.all },\n            )\n          }\n          data-type={Status.default}\n        >\n          All\n        </Link>\n\n        <Link\n          to=\"active\"\n          className={\n            cn(\n              'filter__link',\n              { selected: location.pathname === LocationEnum.active },\n            )\n          }\n          data-type={Status.active}\n        >\n          Active\n        </Link>\n\n        <Link\n          to=\"completed\"\n          className={\n            cn(\n              'filter__link',\n              { selected: location.pathname === LocationEnum.completed },\n            )\n          }\n          data-type={Status.completed}\n        >\n          Completed\n        </Link>\n      </nav>\n\n      <button\n        type=\"button\"\n        className=\"todoapp__clear-completed\"\n        onClick={onDeleteCompletedTodo}\n        style={{ visibility: !isAnyTodoCompleted ? 'hidden' : 'visible' }}\n      >\n        Clear completed\n      </button>\n    </footer>\n  );\n};\n","// eslint-disable-next-line no-shadow\nexport enum ErrorTypes {\n  ErrorGet = 'Unable to load a todo',\n  ErrorPost = 'Unable to add a todo',\n  ErrorDelete = 'Unable to delete a todo',\n  ErrorPatch = 'Unable to update a todo',\n}\n","import React, { useState } from 'react';\nimport cn from 'classnames';\n\ntype Props = {\n  countActiveTodo: number,\n  onHandleAddTodo: (\n    event: React.FormEvent<HTMLFormElement>,\n    input: string,\n    setInput: React.Dispatch<React.SetStateAction<string>>,\n  ) => void,\n  disabled: boolean,\n  onChangeStatusAllTodo: () => Promise<void>,\n  haveNotTodos: boolean,\n};\n\nexport const Header: React.FC<Props> = ({\n  countActiveTodo,\n  onHandleAddTodo,\n  disabled: disabeled,\n  onChangeStatusAllTodo,\n  haveNotTodos,\n}) => {\n  const [input, setInput] = useState('');\n\n  const onChangeInput = (event : React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = event.target;\n\n    setInput(value);\n  };\n\n  return (\n    <header className=\"todoapp__header\">\n      <button\n        type=\"button\"\n        aria-label=\"button\"\n        className={\n          cn(\n            'todoapp__toggle-all',\n            { active: countActiveTodo > 0 },\n          )\n        }\n        onClick={onChangeStatusAllTodo}\n        style={{ visibility: haveNotTodos ? 'hidden' : 'visible' }}\n      />\n\n      <form onSubmit={(event) => (onHandleAddTodo(event, input, setInput))}>\n        <input\n          type=\"text\"\n          className=\"todoapp__new-todo\"\n          placeholder=\"What needs to be done?\"\n          value={input}\n          onChange={onChangeInput}\n          disabled={disabeled}\n        />\n      </form>\n    </header>\n  );\n};\n","import React, {\n  FC, useEffect, useRef, useState,\n} from 'react';\nimport cn from 'classnames';\n\nimport { Todo } from '../types/Todo';\n\ntype Props = {\n  todo: Todo,\n  onRemoveTodo: (todo: Todo) => void\n  onChangeStatusTodo: (todoId: number) => void,\n  setIdTodoForChange: React.Dispatch<React.SetStateAction<number[]>>,\n  onEditTodo: (todo: Todo) => void\n};\n\nexport const TodoItem: FC<Props> = ({\n  todo,\n  onRemoveTodo,\n  onChangeStatusTodo,\n  setIdTodoForChange,\n  onEditTodo,\n}) => {\n  const { id, title = '', completed } = todo;\n  const [editing, setEditing] = useState(false);\n  const [titleEdit, setTitleEdit] = useState(title);\n  const inputRef = useRef<HTMLInputElement | null>(null);\n  const handleTitleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitleEdit(event.target.value);\n  };\n\n  const handleDoubleClick = () => {\n    setEditing(true);\n  };\n\n  const handleBlur = () => {\n    setEditing(false);\n    setTitleEdit(title);\n  };\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    onEditTodo({\n      ...todo,\n      title: titleEdit,\n    });\n    setIdTodoForChange((prev) => [id, ...prev]);\n    setEditing(false);\n  };\n\n  const handleKeyDown = (event: React.KeyboardEvent<HTMLInputElement>) => {\n    if (event.key === 'Escape') {\n      setTitleEdit(title);\n      setEditing(false);\n    }\n  };\n\n  useEffect(() => {\n    if (inputRef.current) {\n      inputRef.current.focus();\n    }\n  }, []);\n\n  return (\n    <div className={cn('todo', { completed })} key={`todo-${id}`}>\n      <label className=\"todo__status-label\" htmlFor=\"todoStatusCheckbox\">\n        <input\n          id=\"todoStatusCheckbox\"\n          type=\"checkbox\"\n          className=\"todo__status\"\n          checked={completed}\n          onChange={() => onChangeStatusTodo && onChangeStatusTodo(id)}\n        />\n      </label>\n      {editing ? (\n        <form onSubmit={handleSubmit}>\n          <input\n            ref={inputRef}\n            className=\"todo__title-field\"\n            type=\"text\"\n            value={titleEdit}\n            onChange={handleTitleChange}\n            onBlur={handleBlur}\n            onKeyDown={handleKeyDown}\n          />\n        </form>\n      ) : (\n        <span className=\"todo__title\" onDoubleClick={handleDoubleClick}>\n          {title}\n        </span>\n      )}\n      <button\n        type=\"button\"\n        className=\"todo__remove\"\n        onClick={() => onRemoveTodo && onRemoveTodo(todo)}\n      >\n        ×\n      </button>\n      <div className=\"modal overlay\">\n        <div className=\"modal-background has-background-white-ter\" />\n        <div className=\"loader\" />\n      </div>\n    </div>\n  );\n};\n","import React, { FC } from 'react';\nimport { Todo } from '../types/Todo';\nimport { TodoItem } from './TodoItem';\n\ntype Props = {\n  visibleTodos: Todo[],\n  onRemoveTodo: (todo: Todo) => void\n  onChangeStatusTodo: (todoId: number) => void,\n  idTodoForChange: number[],\n  setIdTodoForChange: React.Dispatch<React.SetStateAction<number[]>>\n  onEditTodo: (todo: Todo) => void\n};\n\nexport const TodoList: FC<Props> = ({\n  visibleTodos,\n  onRemoveTodo,\n  onChangeStatusTodo,\n  idTodoForChange,\n  setIdTodoForChange,\n  onEditTodo,\n}) => {\n  return (\n    <>\n      {visibleTodos.map((todo) => {\n        if (idTodoForChange.includes(todo.id)) {\n          return (\n            <div className=\"todo\" key={`todo-${todo.id}${+new Date()}`}>\n              <label className=\"todo__status-label\" htmlFor=\"todoStatusCheckbox\">\n                <input\n                  id=\"todoStatusCheckbox\"\n                  type=\"checkbox\"\n                  className=\"todo__status\"\n                />\n              </label>\n              <span\n                className=\"todo__title\"\n              >\n                {todo.title}\n              </span>\n              <button\n                type=\"button\"\n                className=\"todo__remove\"\n              >\n                ×\n              </button>\n\n              <div className=\"modal overlay is-active\">\n                <div className=\"modal-background has-background-white-ter\" />\n                <div className=\"loader\" />\n              </div>\n            </div>\n          );\n        }\n\n        return (\n          <TodoItem\n            key={todo.id}\n            todo={todo}\n            onRemoveTodo={onRemoveTodo}\n            onChangeStatusTodo={onChangeStatusTodo}\n            setIdTodoForChange={setIdTodoForChange}\n            onEditTodo={onEditTodo}\n          />\n        );\n      })}\n    </>\n  );\n};\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { TodoList } from '../TodoList';\n\ntype Props = {\n  visibleTodos: Todo[],\n  onRemoveTodo: (todo: Todo) => void\n  onChangeStatusTodo: (todoId: number) => void,\n  idTodoForChange: number[],\n  setIdTodoForChange: React.Dispatch<React.SetStateAction<number[]>>\n  onEditTodo: (todo: Todo) => void\n};\n\nexport const Main: React.FC<Props> = ({\n  visibleTodos,\n  onRemoveTodo,\n  onChangeStatusTodo,\n  idTodoForChange,\n  setIdTodoForChange,\n  onEditTodo,\n}) => {\n  return (\n    <section className=\"todoapp__main\">\n      <TodoList\n        visibleTodos={visibleTodos}\n        onRemoveTodo={onRemoveTodo}\n        idTodoForChange={idTodoForChange}\n        onChangeStatusTodo={onChangeStatusTodo}\n        setIdTodoForChange={setIdTodoForChange}\n        onEditTodo={onEditTodo}\n      />\n    </section>\n  );\n};\n","import React from 'react';\nimport { ErrorTypes } from '../../types/ErrorTypes';\n\ntype Props = {\n  errorMessage: ErrorTypes,\n  onDeleteError: () => void;\n};\n\nexport const ErrorMessages: React.FC<Props> = (\n  { errorMessage, onDeleteError },\n) => {\n  return (\n    <div className=\"notification is-danger is-light has-text-weight-normal\">\n      <button\n        type=\"button\"\n        aria-label=\"button\"\n        className=\"delete\"\n        onClick={() => onDeleteError()}\n      />\n\n      {errorMessage}\n      <br />\n    </div>\n  );\n};\n","import { Todo } from '../types/Todo';\nimport { LocationEnum } from '../types/LocationEnum';\n\nexport const getVisibleTodos = (locationPath: string, todosArr: Todo[]) => {\n  switch (locationPath) {\n    case LocationEnum.active:\n      return todosArr.filter(todo => !todo.completed);\n    case LocationEnum.completed:\n      return todosArr.filter(todo => todo.completed);\n    default:\n      return todosArr;\n  }\n};\n","import React, { useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { UserWarning } from './UserWarning';\nimport { Todo } from './types/Todo';\nimport {\n  createTodo, getTodos, deleteTodo, updateTodo,\n} from './api/todos';\nimport { Footer } from './components/Footer/Footer';\nimport { Header } from './components/Header/Header';\nimport { Main } from './components/Main/Main';\nimport { ErrorMessages } from './components/ErrorMessages/ErrorMessages';\nimport { ErrorTypes } from './types/ErrorTypes';\nimport { getVisibleTodos } from './utils/getVisibleTodos';\n\nconst USER_ID = 10548;\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [disableInput, setDisableInput] = useState(false);\n  const [errorMessage, setErrorMessage] = useState<ErrorTypes | null>(null);\n  const [idTodoForChange, setIdTodoForChange] = useState<number[]>([]);\n  const location = useLocation();\n\n  const visibleTodos = getVisibleTodos(location.pathname, todos);\n\n  const itemsLeftCount = todos.filter(todo => !todo.completed).length;\n\n  const isAnyTodoCompleted = todos.some(todo => todo.completed === true);\n\n  const haveNotTodos = todos.length === 0;\n\n  async function loadedTodos() {\n    try {\n      const result = await getTodos(USER_ID);\n\n      setTodos(result);\n      setErrorMessage(null);\n    } catch (error) {\n      setErrorMessage(ErrorTypes.ErrorGet);\n    }\n  }\n\n  const handleAddTodo = async (\n    event: React.FormEvent<HTMLFormElement>,\n    input: string,\n    setInput: React.Dispatch<React.SetStateAction<string>>,\n  ) => {\n    event.preventDefault();\n    if (input.trim()) {\n      setDisableInput(true);\n      const todoTempo = {\n        id: 0,\n        userId: USER_ID,\n        title: input,\n        completed: false,\n      };\n\n      todos.splice(todos.length, 1, todoTempo);\n\n      setIdTodoForChange((prev) => [...prev, todoTempo.id]);\n\n      setInput('');\n      try {\n        const createdTodo = await createTodo(USER_ID, {\n          title: input,\n          userId: USER_ID,\n          completed: false,\n        });\n\n        todos.splice(todos.length - 1, 1);\n        await setTodos(prev => [...prev, createdTodo]);\n        setDisableInput(false);\n        setIdTodoForChange([]);\n        setErrorMessage(null);\n      } catch (error) {\n        setErrorMessage(ErrorTypes.ErrorPost);\n        setDisableInput(false);\n      }\n    }\n  };\n\n  const handleUpdateTodo = async (todo: Todo) => {\n    setIdTodoForChange((prev) => [...prev, todo.id]);\n    try {\n      await updateTodo(todo.id, {\n        title: todo.title,\n        completed: todo.completed,\n      });\n      setErrorMessage(null);\n      setIdTodoForChange([]);\n    } catch (error) {\n      setErrorMessage(ErrorTypes.ErrorPatch);\n    }\n  };\n\n  const handleRemoveTodo = async (todo: Todo) => {\n    setIdTodoForChange((prev) => [...prev, todo.id]);\n\n    try {\n      await deleteTodo(todo.id);\n      setTodos(prev => prev.filter(({ id }) => id !== todo.id));\n      setErrorMessage(null);\n      setIdTodoForChange([]);\n    } catch (error) {\n      setErrorMessage(ErrorTypes.ErrorDelete);\n    }\n  };\n\n  const handleChangeStatusTodo = async (\n    todoId: number,\n  ) => {\n    let newTodo: Todo | null = null;\n\n    await setTodos(todos.map((todo) => {\n      if (todo.id !== todoId) {\n        return todo;\n      }\n\n      newTodo = { ...todo, completed: !todo.completed };\n\n      return newTodo;\n    }));\n\n    if (newTodo) {\n      handleUpdateTodo(newTodo);\n    }\n  };\n\n  const handleChangeStatusAllTodo = async () => {\n    try {\n      const todosStatus = await Promise.all(todos.map(\n        ({ id }) => {\n          setIdTodoForChange((prev) => [...prev, id]);\n\n          return updateTodo(id, {\n            completed: !todos.every(todo => todo.completed),\n          });\n        },\n      ));\n\n      setTodos(todosStatus);\n      setIdTodoForChange([]);\n    } catch {\n      setErrorMessage(ErrorTypes.ErrorPatch);\n    }\n  };\n\n  const handleDeleteCompletedTodo = async () => {\n    try {\n      const comletedTodos = todos.filter(todo => todo.completed);\n\n      await Promise.all(comletedTodos.map(async todo => {\n        setIdTodoForChange((prev) => [...prev, todo.id]);\n\n        await deleteTodo(todo.id);\n      }));\n\n      setTodos(prev => prev.filter(todo => todo.completed === false));\n      setIdTodoForChange([]);\n    } catch (error) {\n      setErrorMessage(ErrorTypes.ErrorDelete);\n    }\n  };\n\n  const handleEditTodo = (\n    todoEdited: Todo,\n  ) => {\n    setTodos(visibleTodos.map((todo) => {\n      if (todo.id !== todoEdited.id) {\n        return todo;\n      }\n\n      handleUpdateTodo({ ...todo, title: todoEdited.title });\n\n      return { ...todo, title: todoEdited.title };\n    }));\n  };\n\n  const handleDeleteErrorMessage = () => {\n    setErrorMessage(null);\n  };\n\n  useEffect(() => {\n    loadedTodos();\n  }, []);\n\n  if (!USER_ID) {\n    return <UserWarning />;\n  }\n\n  return (\n    <div className=\"todoapp\">\n      <h1 className=\"todoapp__title\">todos</h1>\n\n      <div className=\"todoapp__content\">\n        <Header\n          countActiveTodo={itemsLeftCount}\n          onHandleAddTodo={handleAddTodo}\n          disabled={disableInput}\n          onChangeStatusAllTodo={handleChangeStatusAllTodo}\n          haveNotTodos={haveNotTodos}\n        />\n\n        <Main\n          visibleTodos={visibleTodos}\n          onRemoveTodo={handleRemoveTodo}\n          onChangeStatusTodo={handleChangeStatusTodo}\n          idTodoForChange={idTodoForChange}\n          setIdTodoForChange={setIdTodoForChange}\n          onEditTodo={handleEditTodo}\n        />\n\n        {!!todos.length && (\n          <Footer\n            itemsLeftCount={itemsLeftCount}\n            onDeleteCompletedTodo={handleDeleteCompletedTodo}\n            isAnyTodoCompleted={isAnyTodoCompleted}\n          />\n        )}\n\n        {errorMessage\n          && (\n            <ErrorMessages\n              errorMessage={errorMessage}\n              onDeleteError={handleDeleteErrorMessage}\n            />\n          )}\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './styles/index.scss';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}